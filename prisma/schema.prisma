// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid()) @map("user_id")
  firstName   String   @map("first_name")
  lastName    String   @map("last_name")
  username    String   @unique @map("username")
  email       String   @unique @map("email_address")
  profileImageUrl  String?  @map("profile_image_url")
  password    String   @map("password")
  createdAt   DateTime @default(now()) @map("created_at")
  lastUpdated DateTime @updatedAt @map("last_updated")
  isDeleted   Boolean  @default(false) @map("is_deleted")

  blogs Blog[]

  @@map("users")
}

model Blog {
  id          String   @id @default(uuid()) @map("blog_id")
  imageUrl    String   @map("image_url")
  title       String
  synopsis    String
  content     String
  isDeleted   Boolean  @default(false) @map("is_deleted")
  createdAt   DateTime @default(now()) @map("created_at")
  lastUpdated DateTime @updatedAt @map("last_updated")

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("blogs")
}
